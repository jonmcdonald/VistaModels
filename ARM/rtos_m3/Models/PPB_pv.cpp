
/**************************************************************/
/*                                                            */
/*      Copyright Mentor Graphics Corporation 2006 - 2012     */
/*                  All Rights Reserved                       */
/*                                                            */
/*       THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY      */
/*         INFORMATION WHICH IS THE PROPERTY OF MENTOR        */
/*         GRAPHICS CORPORATION OR ITS LICENSORS AND IS       */
/*                 SUBJECT TO LICENSE TERMS.                  */
/*                                                            */
/**************************************************************/

//*<
//* Generated By Model Builder, Mentor Graphics Computer Systems, Inc.
//*
//* This file contains the PV class for PPB.
//* This is a template file: You may modify this file to implement the 
//* behavior of your component. 
//* 
//* Model Builder version: 3.0.2.beta1
//* Generated on: Aug. 20, 2010 10:49:40 AM, (user: zamir)
//* Automatically merged on: Mar. 14, 2011 10:30:23 AM, (user: zamir)
//* Automatically merged on: Aug. 30, 2011 01:26:56 PM, (user: zamir)
//* Automatically merged on: Jun. 12, 2012 02:07:10 PM, (user: zamir)
//*>



#include "PPB_pv.h"
#include <iostream>

using namespace sc_core;
using namespace sc_dt;
using namespace std;

//constructor
PPB_pv::PPB_pv(sc_module_name module_name) 
  : PPB_pv_base(module_name) {
}    

// Read callback for genport port.
// Returns true when successful.
bool PPB_pv::genport_callback_read(mb_address_type address, unsigned char* data, unsigned size) {
  
  return true;
}

// Write callback for genport port.
// Returns true when successful.
bool PPB_pv::genport_callback_write(mb_address_type address, unsigned char* data, unsigned size) {
  
  return true;
} 




unsigned PPB_pv::genport_callback_read_dbg(mb_address_type address, unsigned char* data, unsigned size) {
  return 0;
} 

unsigned PPB_pv::genport_callback_write_dbg(mb_address_type address, unsigned char* data, unsigned size) {
  return 0;
} 

bool PPB_pv::genport_get_direct_memory_ptr(mb_address_type address, tlm::tlm_dmi& dmiData) {
  return false;
}


