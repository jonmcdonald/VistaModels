
/**************************************************************/
/*                                                            */
/*      Copyright Mentor Graphics Corporation 2006 - 2012     */
/*                  All Rights Reserved                       */
/*                                                            */
/*       THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY      */
/*         INFORMATION WHICH IS THE PROPERTY OF MENTOR        */
/*         GRAPHICS CORPORATION OR ITS LICENSORS AND IS       */
/*                 SUBJECT TO LICENSE TERMS.                  */
/*                                                            */
/**************************************************************/

//*<
//* Generated By Model Builder, Mentor Graphics Computer Systems, Inc.
//*
//* This file contains the PV class for AHB_APB.
//* This is a template file: You may modify this file to implement the 
//* behavior of your component. 
//* 
//* Model Builder version: 3.4.0
//* Generated on: Jul. 04, 2012 04:34:00 PM, (user: markca)
//* Automatically merged on: Jun. 10, 2013 01:18:31 PM, (user: markca)
//*>



#include "AHB_APB_pv.h"
#include <iostream>

using namespace sc_core;
using namespace sc_dt;
using namespace std;

//constructor
AHB_APB_pv::AHB_APB_pv(sc_module_name module_name) 
  : AHB_APB_pv_base(module_name) {
}    

// Read callback for ahb_slave port.
// Returns true when successful.
bool AHB_APB_pv::ahb_slave_callback_read(mb_address_type address, unsigned char* data, unsigned size) {
  return apb_master_read(address, data, size);
  //  return true;
}

// Write callback for ahb_slave port.
// Returns true when successful.
bool AHB_APB_pv::ahb_slave_callback_write(mb_address_type address, unsigned char* data, unsigned size) {

  TimeLength = 10;
  TimeTrigger = (TimeTrigger + 1) % 8;
  TimeEnd = (TimeEnd + 1) % 8;

  return apb_master_write(address, data, size);
  //  return true;
} 




unsigned AHB_APB_pv::ahb_slave_callback_read_dbg(mb_address_type address, unsigned char* data, unsigned size) {
  return 0;
} 

unsigned AHB_APB_pv::ahb_slave_callback_write_dbg(mb_address_type address, unsigned char* data, unsigned size) {
  return 0;
} 

bool AHB_APB_pv::ahb_slave_get_direct_memory_ptr(mb_address_type address, tlm::tlm_dmi& dmiData) {
  return false;
}

 
