
/**************************************************************/
/*                                                            */
/*      Copyright Mentor Graphics Corporation 2006 - 2015     */
/*                  All Rights Reserved                       */
/*                                                            */
/*       THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY      */
/*         INFORMATION WHICH IS THE PROPERTY OF MENTOR        */
/*         GRAPHICS CORPORATION OR ITS LICENSORS AND IS       */
/*                 SUBJECT TO LICENSE TERMS.                  */
/*                                                            */
/**************************************************************/

//*<
//* Generated By Model Builder, Mentor Graphics Computer Systems, Inc.
//*
//* This file contains the PV class for APB_MASTER.
//* This is a template file: You may modify this file to implement the 
//* behavior of your component. 
//* 
//* Model Builder version: 4.2.2beta
//* Generated on: Nov. 24, 2016 05:14:58 PM, (user: markca)
//*>



#include "APB_MASTER_pv.h"
#include <iostream>

using namespace sc_core;
using namespace sc_dt;
using namespace std;

//constructor
APB_MASTER_pv::APB_MASTER_pv(sc_module_name module_name) 
  : APB_MASTER_pv_base(module_name) {
   SC_THREAD(thread);
} 

// This thread can be used to generate outgoing transactions
void APB_MASTER_pv::thread() {
  
  uint32_t data[20];
  data[0] = 0xAAAAAAAA;
  data[1] = 0xBBBBBBBB;
  data[2] = 0xCCCCCCCC;
  data[3] = 0xDDDDDDDD;
  data[4] = 0xEEEEEEEE;
  data[5] = 0xFFFFFFFF;
  
  for(int i = 0; i < 6; i++) {
    master_write(i*4, &data[i], 1);
  }
}
