
/**************************************************************/
/*                                                            */
/*      Copyright Mentor Graphics Corporation 2006 - 2015     */
/*                  All Rights Reserved                       */
/*                                                            */
/*       THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY      */
/*         INFORMATION WHICH IS THE PROPERTY OF MENTOR        */
/*         GRAPHICS CORPORATION OR ITS LICENSORS AND IS       */
/*                 SUBJECT TO LICENSE TERMS.                  */
/*                                                            */
/**************************************************************/

//*<
//* Generated By Model Builder, Mentor Graphics Computer Systems, Inc.
//*
//* This file contains the PV class for PowerCtl.
//* This is a template file: You may modify this file to implement the 
//* behavior of your component. 
//* 
//* Model Builder version: 4.2.1
//* Generated on: Nov. 11, 2016 10:40:40 AM, (user: markca)
//*>



#include "PowerCtl_pv.h"
#include <iostream>

using namespace sc_core;
using namespace sc_dt;
using namespace std;

//constructor
PowerCtl_pv::PowerCtl_pv(sc_module_name module_name) 
  : PowerCtl_pv_base(module_name) {

  SC_THREAD(thread);
}      

 

// in order to minimize merging conflicts, we recommend to add your functions after this comment

void PowerCtl_pv::thread() {
  wait(14, SC_NS);
  cout << ">>> POWERCTL @ " << sc_time_stamp() << " **disabling PRO**" << endl;
  mb::sysc::set_parameter("top.process.enabled", 0);
  wait(10, SC_NS);
  cout << ">>> POWERCTL @ " << sc_time_stamp() << " **enabling PRO**" << endl;
  mb::sysc::set_parameter("top.process.enabled", 1);
}
