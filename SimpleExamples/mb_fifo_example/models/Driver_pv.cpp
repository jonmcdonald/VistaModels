
/**************************************************************/
/*                                                            */
/*      Copyright Mentor Graphics Corporation 2006 - 2015     */
/*                  All Rights Reserved                       */
/*                                                            */
/*       THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY      */
/*         INFORMATION WHICH IS THE PROPERTY OF MENTOR        */
/*         GRAPHICS CORPORATION OR ITS LICENSORS AND IS       */
/*                 SUBJECT TO LICENSE TERMS.                  */
/*                                                            */
/**************************************************************/

//*<
//* Generated By Model Builder, Mentor Graphics Computer Systems, Inc.
//*
//* This file contains the PV class for Driver.
//* This is a template file: You may modify this file to implement the 
//* behavior of your component. 
//* 
//* Model Builder version: 4.2.1
//* Generated on: Nov. 01, 2016 10:07:36 AM, (user: markca)
//*>


#include "Driver_pv.h"

using namespace sc_core;
using namespace sc_dt;
using namespace std;

//constructor
Driver_pv::Driver_pv(sc_module_name module_name)
  : Driver_pv_base(module_name)
{
  SC_THREAD(thread);
}

Driver_pv::~Driver_pv() {
}

void Driver_pv::thread() {
  unsigned int value = 0x0;
  
  for(int i = 0; i < 10; i++) {
    cout << "DRV @ " << sc_time_stamp() << " WRITING: " << hex << value << endl;
    master_write(0x0, &value, 1);
    value++;
  }
}
