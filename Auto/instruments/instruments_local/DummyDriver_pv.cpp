
/**************************************************************/
/*                                                            */
/*      Copyright Mentor Graphics Corporation 2006 - 2012     */
/*                  All Rights Reserved                       */
/*                                                            */
/*       THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY      */
/*         INFORMATION WHICH IS THE PROPERTY OF MENTOR        */
/*         GRAPHICS CORPORATION OR ITS LICENSORS AND IS       */
/*                 SUBJECT TO LICENSE TERMS.                  */
/*                                                            */
/**************************************************************/

//*<
//* Generated By Model Builder, Mentor Graphics Computer Systems, Inc.
//*
//* This file contains the PV class for DummyDriver.
//* This is a template file: You may modify this file to implement the 
//* behavior of your component. 
//* 
//* Model Builder version: 4.1beta2
//* Generated on: Apr. 17, 2015 03:19:41 PM, (user: markca)
//*>



#include "DummyDriver_pv.h"
#include <iostream>

using namespace sc_core;
using namespace sc_dt;
using namespace std;

//constructor
DummyDriver_pv::DummyDriver_pv(sc_module_name module_name) 
  : DummyDriver_pv_base(module_name) {

  SC_THREAD(dummyThread);

  SC_THREAD(dummyAccelerator);
  SC_THREAD(dummyBrake);

}    

void DummyDriver_pv::dummyThread() {
  while(1) {
    wait(1000, SC_MS);
  }
}

void DummyDriver_pv::dummyAccelerator() {
  while(1) {
    uint value = instruments->acceleratorFifo.get();
    cout << "DummyDriver_pv Accelerator fifo: " << value << endl;
  }
}

void DummyDriver_pv::dummyBrake() {
  while(1) {
    uint value = instruments->brakeFifo.get();
    cout << "DummyDriver_pv Brake fifo: " << value << endl;
  }
}
