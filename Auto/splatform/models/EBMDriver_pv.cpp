
/**************************************************************/
/*                                                            */
/*      Copyright Mentor Graphics Corporation 2006 - 2012     */
/*                  All Rights Reserved                       */
/*                                                            */
/*       THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY      */
/*         INFORMATION WHICH IS THE PROPERTY OF MENTOR        */
/*         GRAPHICS CORPORATION OR ITS LICENSORS AND IS       */
/*                 SUBJECT TO LICENSE TERMS.                  */
/*                                                            */
/**************************************************************/

//*<
//* Generated By Model Builder, Mentor Graphics Computer Systems, Inc.
//*
//* This file contains the PV class for EBMDriver.
//* This is a template file: You may modify this file to implement the 
//* behavior of your component. 
//* 
//* Model Builder version: 4.1beta2
//* Generated on: Apr. 28, 2015 09:46:18 AM, (user: jon)
//*>



#include "EBMDriver_pv.h"
#include "MemoryMap.h"
#include <iostream>

using namespace sc_core;
using namespace sc_dt;
using namespace std;

extern bool myRunning;

//constructor
EBMDriver_pv::EBMDriver_pv(sc_module_name module_name) 
  : EBMDriver_pv_base(module_name) {
  SC_THREAD(thread);
}    

// callback for any change in signal: rxi of type: sc_in<bool>
void EBMDriver_pv::rxi_callback() {
  unsigned s;
  unsigned id;
  unsigned char d[9];

  if (rxi.read() == 1) {
    m_write(CAN_ACK, 0);
    m_read(CAN_RXSIZE, s);
    m_read(CAN_RXIDENT, id);
    if (s > 0)
      m_read(CAN_RXDATA, d, s);
  }
}

void EBMDriver_pv::thread() {
  unsigned d;
  mb::mb_token_ptr tokenptr;

  while(myRunning) {
    wait (70, SC_MS);
    d = s->pull();
    tokenptr = new mb::mb_token();
    tokenptr->setField("CreationTime", sc_time_stamp());
    set_current_token(tokenptr);
    m_write(CAN_DATA, d);
    m_write(CAN_SIZE, 4);
    m_write(CAN_IDENT, BRAKEID);
  }
}
